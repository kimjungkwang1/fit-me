buildscript {
	dependencies {
		// queryDsl
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
	ext {
		set('springCloudVersion', "2021.0.0")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'site.chachacha.fitme'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.auth0:java-jwt:4.4.0'

	// DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// MySql
	implementation 'mysql:mysql-connector-java:8.0.33'
		// Querydsl
		implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
		annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
		annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
		annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// ETC
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

		// AWS Parameter Store
		implementation 'io.awspring.cloud:spring-cloud-starter-aws-parameter-store-config:2.3.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 추가 시작
//apply plugin: "com.ewerk.gradle.plugins.querydsl"
def generated = layout.buildDirectory.dir("generated/querydsl").get().asFile

configurations {
	querydsl.extendsFrom compileClasspath
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(generated)
}

clean.doLast {
	file(querydslDir).deleteDir()
}
// querydsl 추가 끝