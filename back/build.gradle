buildscript {
    dependencies {
        // queryDsl
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
    }
    ext {
        set('springCloudVersion', "2021.0.0")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'site.chachacha.fitme'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    implementation 'com.auth0:java-jwt:4.4.0'

    // DB
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // MySql
    implementation 'mysql:mysql-connector-java:8.0.33'
    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // ETC
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // AWS Parameter Store
    implementation 'io.awspring.cloud:spring-cloud-starter-aws-parameter-store-config:2.3.3'

    // Test
    // H2
    testImplementation 'com.h2database:h2'
    // Redis
    testImplementation('it.ozimov:embedded-redis:0.7.3') { exclude group: 'org.slf4j', module: 'slf4j-simple' }

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl 추가 시작
//apply plugin: "com.ewerk.gradle.plugins.querydsl"
def generated = layout.buildDirectory.dir("generated/querydsl").get().asFile

configurations {
    querydsl.extendsFrom compileClasspath
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(generated)
}

clean.doLast {
    file(generated).deleteDir()
}
// querydsl 추가 끝